name: üîç SQL Validation

on:
  pull_request:
    branches: [ main ]
    paths: [ "sql/**" ]
  workflow_dispatch:

jobs:
  validate-changes:
    name: üìù Validar Altera√ß√µes SQL
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîé Identificar Arquivos
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch origin ${{ github.base_ref }}
            FILES=$(git diff --name-only --diff-filter=ACMRT origin/${{ github.base_ref }}... | grep '^sql/.*\.sql$' || true)
          else
            FILES=$(find sql -type f -name "*.sql" 2>/dev/null || true)
          fi

          if [ -n "$FILES" ]; then
            echo "Arquivos encontrados:"
            echo "$FILES" | while read -r file; do
              echo "  - $file"
            done
            echo "files<<EOF" >> $GITHUB_OUTPUT
            echo "$FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "Nenhum arquivo SQL encontrado"
            echo "files=" >> $GITHUB_OUTPUT
          fi

      - name: üîç Validar Nomenclatura
        run: |
          echo "::group::Valida√ß√£o de Nomenclatura de Scripts SQL"
          FILES="${{ steps.changed-files.outputs.files }}"

          if [ -z "$FILES" ]; then
            echo "‚è≠Ô∏è Skip: Nenhum arquivo SQL para validar"
            exit 0
          fi

          error_count=0
          error_files=""

          echo "${{ steps.changed-files.outputs.files }}" | while read -r file; do
            echo "üîé Verificando: $file"
            basename=$(basename "$file")

            if [[ "$file" == *"/repeatable/"* ]]; then
              if [[ ! "$basename" =~ ^R__[a-zA-Z0-9_]+\.sql$ ]]; then
                echo "::error file=$file::‚ùå $basename - Deve seguir o padr√£o R__{nome}.sql"
                error_count=$((error_count + 1))
                error_files="$error_files\n- $file"
              else
                echo "‚úÖ Nomenclatura v√°lida: $basename"
              fi
            elif [[ "$file" =~ /ddl/|/dml/ ]]; then
              if [[ ! "$basename" =~ ^V[0-9]{14}__[a-zA-Z0-9_]+\.sql$ ]]; then
                echo "::error file=$file::‚ùå $basename - Deve seguir o padr√£o V{YYYYMMDDHHMMSS}__{nome}.sql"
                error_count=$((error_count + 1))
                error_files="$error_files\n- $file"
              else
                echo "‚úÖ Nomenclatura v√°lida: $basename"
              fi
            fi
          done

          if [ $error_count -gt 0 ]; then
            echo "‚ùå $error_count arquivo(s) com nomenclatura inv√°lida:"
            echo -e "$error_files"
            exit 1
          fi
          echo "::endgroup::"

      - name: üìù Validar Sintaxe SQL
        run: |
          echo "::group::Valida√ß√£o de Sintaxe SQL"
          FILES="${{ steps.changed-files.outputs.files }}"

          if [ -z "$FILES" ]; then
            echo "‚è≠Ô∏è Skip: Nenhum arquivo SQL para validar"
            exit 0
          fi

          error_count=0
          error_files=""

          echo "${{ steps.changed-files.outputs.files }}" | while read -r file; do
            echo "üîé Analisando: $file"
            if [ ! -r "$file" ]; then
              echo "::error file=$file::‚ùå Arquivo n√£o pode ser lido"
              error_count=$((error_count + 1))
              error_files="$error_files\n- $file"
              continue
            fi

            # Aqui voc√™ pode adicionar sua l√≥gica de valida√ß√£o SQL
            # Por exemplo, usando sqlformat ou outro validador SQL
          done

          if [ $error_count -gt 0 ]; then
            echo "‚ùå $error_count arquivo(s) com erro de sintaxe:"
            echo -e "$error_files"
            exit 1
          fi
          echo "::endgroup::"

      - name: üìä Resumo
        if: always()
        run: |
          FILES="${{ steps.changed-files.outputs.files }}"
          if [ -z "$FILES" ]; then
            echo "‚è≠Ô∏è Valida√ß√£o n√£o necess√°ria: Nenhum arquivo SQL alterado"
          else
            echo "‚úÖ Valida√ß√£o conclu√≠da com sucesso"
          fi
