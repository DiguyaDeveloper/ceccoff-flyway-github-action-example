name: üîç SQL Validation

on:
  pull_request:
    branches: [ main ]
    paths: [ "sql/**" ]
  workflow_dispatch:

jobs:
  validate-changes:
    name: üìù Validar Altera√ß√µes SQL
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîç Verificar Estrutura
        run: |
          if [ ! -d "sql" ]; then
            echo "::error::Diret√≥rio sql/ n√£o encontrado"
            exit 1
          fi

          for dir in ddl dml repeatable; do
            if [ ! -d "sql/$dir" ]; then
              echo "::warning::Diret√≥rio sql/$dir n√£o encontrado"
            fi
          done

      - name: üîé Identificar Arquivos
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git fetch origin ${{ github.base_ref }}
            FILES=$(git diff --name-only --diff-filter=ACMRT origin/${{ github.base_ref }}... | grep '^sql/.*\.sql$' | tr '\n' ' ' || true)
          else
            FILES=$(find sql -type f -name "*.sql" 2>/dev/null | tr '\n' ' ' || true)
          fi

          if [ -n "$FILES" ]; then
            echo "Arquivos encontrados:"
            for file in $FILES; do
              echo "  - $file"
            done
          else
            echo "Nenhum arquivo SQL encontrado"
          fi

          echo "files=${FILES}" >> "$GITHUB_OUTPUT"

      - name: üìù Validar Sintaxe SQL
        if: steps.changed-files.outputs.files != ''
        run: |
          echo "::group::Valida√ß√£o de Scripts SQL"
          for file in ${{ steps.changed-files.outputs.files }}; do
            echo "üîé Analisando $file"
            if [ ! -r "$file" ]; then
              echo "::error file=$file::Arquivo n√£o pode ser lido"
              exit 1
            fi
          done
          echo "::endgroup::"

      - name: üîç Validar Nomenclatura
        if: steps.changed-files.outputs.files != ''
        run: |
          echo "::group::Valida√ß√£o de Nomenclatura"

          error_count=0
          error_files=""

          while IFS= read -r file; do
            if [[ -f "$file" ]]; then
              basename=$(basename "$file")
              echo "üîé Verificando: $file"

              if [[ $file == *"/repeatable/"* ]]; then
                # Valida√ß√£o mais estrita para scripts repet√≠veis
                if [[ ! $basename =~ ^R__[a-zA-Z0-9_]+\.sql$ ]]; then
                  echo "::error file=$file::‚ùå Scripts repet√≠veis devem seguir exatamente o padr√£o R__{nome}.sql"
                  error_count=$((error_count + 1))
                  error_files="$error_files\n- $file"
                fi
              elif [[ $file =~ /ddl/|/dml/ ]]; then
                # Valida√ß√£o mais estrita para scripts versionados
                if [[ ! $basename =~ ^V[0-9]{14}__[a-zA-Z0-9_]+\.sql$ ]]; then
                  echo "::error file=$file::‚ùå Scripts versionados devem seguir exatamente o padr√£o V{YYYYMMDDHHMMSS}__{nome}.sql"
                  error_count=$((error_count + 1))
                  error_files="$error_files\n- $file"
                fi
              fi
            fi
          done <<< "${{ steps.changed-files.outputs.files }}"

          if [ $error_count -gt 0 ]; then
            echo "‚ùå Encontrados $error_count arquivo(s) com erro de nomenclatura:"
            echo -e "$error_files"
            exit 1
          fi

          echo "‚úÖ Todos os arquivos seguem o padr√£o de nomenclatura"
          echo "::endgroup::"

      - name: üìä Resumo
        if: always()
        run: |
          if [ -z "${{ steps.changed-files.outputs.files }}" ]; then
            echo "‚ÑπÔ∏è Nenhum arquivo SQL alterado"
          else
            echo "‚úÖ Valida√ß√£o conclu√≠da com sucesso"
          fi
